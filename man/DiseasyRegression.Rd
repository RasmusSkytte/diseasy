% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/DiseasyRegression.R
\name{DiseasyRegression}
\alias{DiseasyRegression}
\title{Meta module for the regression class of models}
\description{
TODO
}
\seealso{
\link[stats:family]{stats::family}, \link[stats:formula]{stats::as.formula}

\link{DiseasyObservables}
}
\section{Super classes}{
\code{\link[diseasy:DiseasyBaseModule]{diseasy::DiseasyBaseModule}} -> \code{\link[diseasy:DiseasyModel]{diseasy::DiseasyModel}} -> \code{DiseasyRegression}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{formula}}{(\code{formula})\cr
The base formula of the module. Aggregation features extend this base formula. Read-only.}

\item{\code{family}}{(\code{family})\cr
The family used in the regression fit (see \code{glm} or \code{brms}). Read-only.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-DiseasyRegression-new}{\code{DiseasyRegression$new()}}
\item \href{#method-DiseasyRegression-get_results}{\code{DiseasyRegression$get_results()}}
\item \href{#method-DiseasyRegression-clone}{\code{DiseasyRegression$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="diseasy" data-topic="DiseasyBaseModule" data-id="set_moduleowner"><a href='../../diseasy/html/DiseasyBaseModule.html#method-DiseasyBaseModule-set_moduleowner'><code>diseasy::DiseasyBaseModule$set_moduleowner()</code></a></span></li>
<li><span class="pkg-link" data-pkg="diseasy" data-topic="DiseasyModel" data-id="get_training_data"><a href='../../diseasy/html/DiseasyModel.html#method-DiseasyModel-get_training_data'><code>diseasy::DiseasyModel$get_training_data()</code></a></span></li>
<li><span class="pkg-link" data-pkg="diseasy" data-topic="DiseasyModel" data-id="load_module"><a href='../../diseasy/html/DiseasyModel.html#method-DiseasyModel-load_module'><code>diseasy::DiseasyModel$load_module()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DiseasyRegression-new"></a>}}
\if{latex}{\out{\hypertarget{method-DiseasyRegression-new}{}}}
\subsection{Method \code{new()}}{
Creates a new instance of the \code{DiseasyRegression} \link[R6:R6Class]{R6} class.
This module is typically not constructed directly but rather through \verb{DiseasyModel*} classes, such as \link{DiseasyModelG0}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DiseasyRegression$new(formula, family, training_length, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{formula}}{(\code{character})\cr
A \code{character} string that is passed to \code{stats::as.formula} via \code{glue} (see details).}

\item{\code{family}}{(\code{family})\cr
\code{stats::family} object passed to the regression call.}

\item{\code{training_length}}{(\code{numeric})\cr
The number of days that should be included in the training of the model.}

\item{\code{...}}{parameters sent to \code{DiseasyModel} \link[R6:R6Class]{R6} constructor.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
The observable will change at run time and we therefore cannot define a static formula.
We can use "{observable}" in our formula which will then be translated at run time.
For example, if the requested observable is "n_hospital" and the formula is "{observable} ~ 1",
then at run time, the formula will translate to "n_hospital ~ 1".

Furthermore the aggregation can also change at run time, so the model should incorporate a
\code{update_formula(aggregation)} function that accounts for changes in aggregation.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DiseasyRegression-get_results"></a>}}
\if{latex}{\out{\hypertarget{method-DiseasyRegression-get_results}{}}}
\subsection{Method \code{get_results()}}{
The primary method used to request model results of a given observable at a given aggregation
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DiseasyRegression$get_results(
  observable,
  prediction_length,
  quantiles = NULL,
  aggregation = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{observable}}{(\code{character})\cr
The observable to provide prediction for. Must match observable in \code{DiseasyObservables} \link[R6:R6Class]{R6} class.}

\item{\code{prediction_length}}{(\code{numeric})\cr
The number of days to predict.
The prediction start is defined by \code{last_queryable_date} of the \code{DiseasyObservables} \link[R6:R6Class]{R6} class.}

\item{\code{quantiles}}{(\code{list}(\code{numeric}))\cr
Default NULL.
If given, results are returned at the quantiles given}

\item{\code{aggregation}}{(\code{list}(\code{quosures}))\cr
Default NULL.
If given, expressions in aggregation evaluated to give the aggregation level.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A tibble with predictions at the level specified by aggregation level. In addition to aggregation columns, the output has the columns:\cr   date (\code{Date}) specifying the date of the prediction\cr   realization_id (\code{character}) giving a unique id for each realization in the ensemble\cr   model (\code{character}) the name (classname) of the model used to provide the prediction
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-DiseasyRegression-clone"></a>}}
\if{latex}{\out{\hypertarget{method-DiseasyRegression-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{DiseasyRegression$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
