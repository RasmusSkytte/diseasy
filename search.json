[{"path":"https://rasmusskytte.github.io/diseasy/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rasmus Skytte Randløv. Author, maintainer. Marcus Munch Grünewald. Author. Lasse Engbo Christiansen. Author. Kaare Græsbøll. Author.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Randløv R, Grünewald M, Christiansen L, Græsbøll K (2023). diseasy: Disease Ensemble Modelling Made Easy. R package version 0.0.0.9000, https://github.com/ssi-dk/diseasy.","code":"@Manual{,   title = {diseasy: Disease Ensemble Modelling Made Easy},   author = {Rasmus Skytte Randløv and Marcus Munch Grünewald and Lasse Engbo Christiansen and Kaare Græsbøll},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://github.com/ssi-dk/diseasy}, }"},{"path":"https://rasmusskytte.github.io/diseasy/index.html","id":"diseasy-","dir":"","previous_headings":"","what":"Disease Ensemble Modelling Made Easy","title":"Disease Ensemble Modelling Made Easy","text":"Leveraging combinatorial building ensemble forecasting disease modelling","code":""},{"path":"https://rasmusskytte.github.io/diseasy/index.html","id":"the-power-of-combinations","dir":"","previous_headings":"","what":"The power of combinations","title":"Disease Ensemble Modelling Made Easy","text":"diseasy framework disease modelling built around philosophy combinatorial building. Even small number modules, ensemble consisting vast array disease models can constructed combining individual modules.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/index.html","id":"the-power-of-ensembles","dir":"","previous_headings":"","what":"The power of ensembles","title":"Disease Ensemble Modelling Made Easy","text":"Ensemble models disease spread typically outperforms individual models terms robust accurate forecasts. diseasy, ensemble models leveraged support evidence-based decision-making pandemic preparedness.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Disease Ensemble Modelling Made Easy","text":"can install development version diseasy GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"ssi-dk/diseasy\")  # Use \"ssi-dk/diseasy@*release\" to install the latest release version"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":null,"dir":"Reference","previous_headings":"","what":"Base module for the framework — DiseasyBaseModule","title":"Base module for the framework — DiseasyBaseModule","text":"TODO","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Base module for the framework — DiseasyBaseModule","text":"hash (character) Computes hash value module. Useful logging caching. Read .","code":""},{"path":[]},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Base module for the framework — DiseasyBaseModule","text":"DiseasyBaseModule$new() DiseasyBaseModule$set_moduleowner() DiseasyBaseModule$load_module() DiseasyBaseModule$clone()","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Base module for the framework — DiseasyBaseModule","text":"Creates new instance DiseasyBaseModule R6 class. module typically constructed directly rather derived classes.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Base module for the framework — DiseasyBaseModule","text":"","code":"DiseasyBaseModule$new(moduleowner = class(self)[1])"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Base module for the framework — DiseasyBaseModule","text":"moduleowner (character) name moduleowner. Used logging.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Base module for the framework — DiseasyBaseModule","text":"new instance DiseasyBaseModule R6 class.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"method-set-moduleowner-","dir":"Reference","previous_headings":"","what":"Method set_moduleowner()","title":"Base module for the framework — DiseasyBaseModule","text":"Changes \"ownership\" module. Used logging.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Base module for the framework — DiseasyBaseModule","text":"","code":"DiseasyBaseModule$set_moduleowner(moduleowner)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Base module for the framework — DiseasyBaseModule","text":"moduleowner (character) name moduleowner.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Base module for the framework — DiseasyBaseModule","text":"NULL","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"method-load-module-","dir":"Reference","previous_headings":"","what":"Method load_module()","title":"Base module for the framework — DiseasyBaseModule","text":"Loads copy provided module module.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Base module for the framework — DiseasyBaseModule","text":"","code":"DiseasyBaseModule$load_module(module, clone = TRUE)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Base module for the framework — DiseasyBaseModule","text":"module (R6::R6Class instance) instance cloned field name class module clone (boolean) Toggle whether module cloned loading. Default TRUE.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Base module for the framework — DiseasyBaseModule","text":"methods allows setting internal module instances DiseasyBaseModule instance created.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"Base module for the framework — DiseasyBaseModule","text":"NULL","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Base module for the framework — DiseasyBaseModule","text":"objects class cloneable method.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Base module for the framework — DiseasyBaseModule","text":"","code":"DiseasyBaseModule$clone(deep = FALSE)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Base module for the framework — DiseasyBaseModule","text":"deep Whether make deep clone.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":null,"dir":"Reference","previous_headings":"","what":"Observable handler — DiseasyObservables","title":"Observable handler — DiseasyObservables","text":"TODO","code":""},{"path":[]},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Observable handler — DiseasyObservables","text":"diseasy::DiseasyBaseModule -> DiseasyObservables","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Observable handler — DiseasyObservables","text":"case_definition (character) set case_definition get DiseasyObservables . Read-. start_date (Date) start date study period. Read-. end_date (Date) end date study period. Read-. last_queryable_date (Date) latest date can queried. Read-. ds (Diseasystore*) currently loaded diseasystore provides features. Read-. available_observables (character) currently available observables loaded diseasystore. Read-. slice_ts (Date) timestamp slice database . Read-. conn (DBIConnection) connection database . Read-.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Observable handler — DiseasyObservables","text":"diseasy::DiseasyBaseModule$load_module() diseasy::DiseasyBaseModule$set_moduleowner()","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Observable handler — DiseasyObservables","text":"DiseasyObservables$new() DiseasyObservables$set_case_definition() DiseasyObservables$set_last_queryable_date() DiseasyObservables$set_study_period() DiseasyObservables$set_slice_ts() DiseasyObservables$get_observation() DiseasyObservables$describe() DiseasyObservables$clone()","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Observable handler — DiseasyObservables","text":"Creates new instance DiseasyObservables R6 class.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Observable handler — DiseasyObservables","text":"","code":"DiseasyObservables$new(   case_definition = NULL,   start_date = NULL,   end_date = NULL,   last_queryable_date = NULL,   conn = NULL,   slice_ts = NULL,   ... )"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Observable handler — DiseasyObservables","text":"case_definition (character) character string controls feature store get data . start_date (Date) Study period start (default values get_observation). end_date (Date) Study period end (default values get_observation). last_queryable_date (Date) Enforce limit data can pulled (date). conn (DBIConnection) database connection object (inherits DBIConnection) slice_ts (Date character) Date slice database . See SCDB::get_table() ... parameters sent DiseasyBaseModule R6 constructor.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Observable handler — DiseasyObservables","text":"new instance DiseasyBaseModule R6 class.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"method-set-case-definition-","dir":"Reference","previous_headings":"","what":"Method set_case_definition()","title":"Observable handler — DiseasyObservables","text":"Set case definition get DiseasyObservables .","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Observable handler — DiseasyObservables","text":"","code":"DiseasyObservables$set_case_definition(case_definition)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Observable handler — DiseasyObservables","text":"case_definition (character) Text label disease get DiseasyObservables . Must match case definition implemented featurestore package.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"method-set-last-queryable-date-","dir":"Reference","previous_headings":"","what":"Method set_last_queryable_date()","title":"Observable handler — DiseasyObservables","text":"Enforce limit data can pulled.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Observable handler — DiseasyObservables","text":"","code":"DiseasyObservables$set_last_queryable_date(last_queryable_date)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Observable handler — DiseasyObservables","text":"last_queryable_date (Date) DiseasyObservables module return data date.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"method-set-study-period-","dir":"Reference","previous_headings":"","what":"Method set_study_period()","title":"Observable handler — DiseasyObservables","text":"Set (default) time period get observations .","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Observable handler — DiseasyObservables","text":"","code":"DiseasyObservables$set_study_period(start_date, end_date)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Observable handler — DiseasyObservables","text":"start_date (Date) Start date get DiseasyObservables (including). end_date (Date) End date get DiseasyObservables (including).","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"method-set-slice-ts-","dir":"Reference","previous_headings":"","what":"Method set_slice_ts()","title":"Observable handler — DiseasyObservables","text":"Set slice_ts get data ","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Observable handler — DiseasyObservables","text":"","code":"DiseasyObservables$set_slice_ts(slice_ts)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Observable handler — DiseasyObservables","text":"slice_ts (Date character) Date slice database ","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"method-get-observation-","dir":"Reference","previous_headings":"","what":"Method get_observation()","title":"Observable handler — DiseasyObservables","text":"Retrieve \"observable\" data set corresponding set case_definition. default, internal values start_date end_date used return data, can overwritten. results cached faster retrieval subsequent calls.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Observable handler — DiseasyObservables","text":"","code":"DiseasyObservables$get_observation(   observable,   aggregation = NULL,   start_date = self %.% start_date,   end_date = self %.% end_date )"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Observable handler — DiseasyObservables","text":"observable (character) requested observable. follow pattern 'n_*'. aggregation (list(quosures)) Default NULL. given, expressions aggregation evaluated give aggregation level. Use rlang::quos(...) specify aggregation. start_date (Date) Start date get DiseasyObservables (including). end_date (Date) End date get DiseasyObservables (including).","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Observable handler — DiseasyObservables","text":"observable found, function returns corresponding data aggregation level. Otherwise, function fails lists available DiseasyObservables case_definition.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"method-describe-","dir":"Reference","previous_headings":"","what":"Method describe()","title":"Observable handler — DiseasyObservables","text":"Prints human readable report internal state module.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Observable handler — DiseasyObservables","text":"","code":"DiseasyObservables$describe()"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Observable handler — DiseasyObservables","text":"objects class cloneable method.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Observable handler — DiseasyObservables","text":"","code":"DiseasyObservables$clone(deep = FALSE)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Observable handler — DiseasyObservables","text":"deep Whether make deep clone.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":null,"dir":"Reference","previous_headings":"","what":"Season handler — DiseasySeason","title":"Season handler — DiseasySeason","text":"TODO","code":""},{"path":[]},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Season handler — DiseasySeason","text":"diseasy::DiseasyBaseModule -> DiseasySeason","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Season handler — DiseasySeason","text":"reference_date (Date) reference date season models. Read-. model_t (function) model currently used module (days past reference date). Read-. model_date (function) model currently used module (date interest). Read-. observables (diseasy::DiseasyObservables) local copy DiseasyObservables module. Read-.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Season handler — DiseasySeason","text":"diseasy::DiseasyBaseModule$load_module() diseasy::DiseasyBaseModule$set_moduleowner()","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Season handler — DiseasySeason","text":"DiseasySeason$new() DiseasySeason$set_reference_date() DiseasySeason$set_scale() DiseasySeason$use_season_model() DiseasySeason$use_constant_season() DiseasySeason$use_cosine_season() DiseasySeason$use_covid_season_v1() DiseasySeason$use_covid_season_v2() DiseasySeason$describe() DiseasySeason$clone()","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Season handler — DiseasySeason","text":"Creates new instance DiseasySeason R6 class.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Season handler — DiseasySeason","text":"","code":"DiseasySeason$new(reference_date = NULL, observables = NULL, ...)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Season handler — DiseasySeason","text":"reference_date (Date) Date season modifier computed relatively . observables (R6::R6Class instance) instance DiseasyObservables needed season models. ... parameters sent DiseasyBaseModule R6 constructor.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Season handler — DiseasySeason","text":"new instance DiseasySeason R6 class.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"method-set-reference-date-","dir":"Reference","previous_headings":"","what":"Method set_reference_date()","title":"Season handler — DiseasySeason","text":"Sets reference_date DiseasySeason module.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Season handler — DiseasySeason","text":"","code":"DiseasySeason$set_reference_date(reference_date)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Season handler — DiseasySeason","text":"reference_date (Date) Date season modifier computed relatively .","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"method-set-scale-","dir":"Reference","previous_headings":"","what":"Method set_scale()","title":"Season handler — DiseasySeason","text":"Sets scale active season model.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Season handler — DiseasySeason","text":"","code":"DiseasySeason$set_scale(scale)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Season handler — DiseasySeason","text":"scale (numeric) scale season effect (relative climate normal).","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"method-use-season-model-","dir":"Reference","previous_headings":"","what":"Method use_season_model()","title":"Season handler — DiseasySeason","text":"Sets DiseasySeason module use specified season model.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Season handler — DiseasySeason","text":"","code":"DiseasySeason$use_season_model(model_name, dots = NULL)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Season handler — DiseasySeason","text":"model_name Name season_model use (calls equivalent $use_<model_name>()). dots (list) Named list arguments passed dot-ellipsis season model.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"method-use-constant-season-","dir":"Reference","previous_headings":"","what":"Method use_constant_season()","title":"Season handler — DiseasySeason","text":"Sets season module use constant value (1).","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Season handler — DiseasySeason","text":"","code":"DiseasySeason$use_constant_season()"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"method-use-cosine-season-","dir":"Reference","previous_headings":"","what":"Method use_cosine_season()","title":"Season handler — DiseasySeason","text":"Sets DiseasySeason module use cosine model season.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Season handler — DiseasySeason","text":"","code":"DiseasySeason$use_cosine_season(peak = 20.09946, scale = 0.5726693)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Season handler — DiseasySeason","text":"peak (numeric) Sets period maximal activity (days past new-year). default, risk infection antiphase DMI climate normal maximum daily temperature. scale scale (numeric) Sets scale season model. scale percent wise difference active least active period","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"method-use-covid-season-v-","dir":"Reference","previous_headings":"","what":"Method use_covid_season_v1()","title":"Season handler — DiseasySeason","text":"Sets DiseasySeason module use first version covid 19 season model","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Season handler — DiseasySeason","text":"","code":"DiseasySeason$use_covid_season_v1(scale = 0.4825524)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Season handler — DiseasySeason","text":"scale scale (numeric) Sets scale season model. scale percent wise difference active least active period","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"method-use-covid-season-v--1","dir":"Reference","previous_headings":"","what":"Method use_covid_season_v2()","title":"Season handler — DiseasySeason","text":"Sets DiseasySeason module use second version covid 19 season model","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Season handler — DiseasySeason","text":"","code":"DiseasySeason$use_covid_season_v2(scale = 0.5042782)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Season handler — DiseasySeason","text":"scale scale (numeric) Sets scale season model. scale percent wise difference active least active period","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"method-describe-","dir":"Reference","previous_headings":"","what":"Method describe()","title":"Season handler — DiseasySeason","text":"Prints human readable report internal state module.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Season handler — DiseasySeason","text":"","code":"DiseasySeason$describe()"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Season handler — DiseasySeason","text":"objects class cloneable method.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Season handler — DiseasySeason","text":"","code":"DiseasySeason$clone(deep = FALSE)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Season handler — DiseasySeason","text":"deep Whether make deep clone.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/active_binding.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to generate active bindings that are read_only — active_binding","title":"Helper function to generate active bindings that are read_only — active_binding","text":"Helper function generate active bindings read_only","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/active_binding.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to generate active bindings that are read_only — active_binding","text":"","code":"active_binding(value, expr, name)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/active_binding.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to generate active bindings that are read_only — active_binding","text":"value value attempted set expr expression execute called name name active binding","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/diseasy-package.html","id":null,"dir":"Reference","previous_headings":"","what":"diseasy: Disease Ensemble Modelling Made Easy — diseasy-package","title":"diseasy: Disease Ensemble Modelling Made Easy — diseasy-package","text":"package facilitates creation ensemble models modular construction combinatorics.","code":""},{"path":[]},{"path":"https://rasmusskytte.github.io/diseasy/reference/diseasy-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"diseasy: Disease Ensemble Modelling Made Easy — diseasy-package","text":"Maintainer: Rasmus Skytte Randløv rske@ssi.dk (ORCID) Authors: Marcus Munch Grünewald mmgr@ssi.dk (ORCID) Lasse Engbo Christiansen lsec@ssi.dk (ORCID) Kaare Græsbøll kagr@ssi.dk (ORCID)","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/diseasyoption.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to get option — diseasyoption","title":"Helper function to get option — diseasyoption","text":"Helper function get option","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/diseasyoption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to get option — diseasyoption","text":"","code":"diseasyoption(option, class = \"DiseasystoreBase\")"},{"path":"https://rasmusskytte.github.io/diseasy/reference/diseasyoption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to get option — diseasyoption","text":"option (character) Name option get class (character R6::R6class Diseasy* instance) Either classname object option applies .","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/diseasyoption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to get option — diseasyoption","text":"specific option within diseasy framework given option class","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/diseasyoption.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to get option — diseasyoption","text":"","code":"# Retrieve default option for source conn   diseasyoption(\"source_conn\") #> NULL    # Retrieve DiseasystoreGoogleCovid19 specific option for source conn   diseasyoption(\"source_conn\", \"DiseasystoreGoogleCovid19\") #> [1] \"https://storage.googleapis.com/covid19-open-data/v3/\"    # Try to retrieve specific option for source conn for a non existant / unconfigured diseasystore   diseasyoption(\"source_conn\", \"DiseasystoreNonExistent\") # Returns default source_conn #> NULL"},{"path":"https://rasmusskytte.github.io/diseasy/reference/grapes-.-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Existence aware pick operator — %.%","title":"Existence aware pick operator — %.%","text":"Existence aware pick operator","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/grapes-.-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Existence aware pick operator — %.%","text":"","code":"env %.% field"},{"path":"https://rasmusskytte.github.io/diseasy/reference/grapes-.-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Existence aware pick operator — %.%","text":"env (object) object environment attempt pick field (character) name field pick env","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/grapes-.-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Existence aware pick operator — %.%","text":"Error field exist env, otherwise returns field","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/printr.html","id":null,"dir":"Reference","previous_headings":"","what":"cat printing with default new line — printr","title":"cat printing with default new line — printr","text":"cat printing default new line","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/printr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"cat printing with default new line — printr","text":"","code":"printr(..., file = \"/dev/null\", sep = \"\")"},{"path":"https://rasmusskytte.github.io/diseasy/reference/printr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"cat printing with default new line — printr","text":"... normal input cat file Path output file append output sep separator given cat","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/read_only_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to produce a ","title":"Helper function to produce a ","text":"Helper function produce \"read \" error","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/read_only_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to produce a ","text":"","code":"read_only_error(field)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/read_only_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to produce a ","text":"field name field read ","code":""},{"path":"https://rasmusskytte.github.io/diseasy/news/index.html","id":"diseasy-0009000","dir":"Changelog","previous_headings":"","what":"diseasy 0.0.0.9000","title":"diseasy 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
