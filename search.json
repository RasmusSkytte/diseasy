[{"path":"https://rasmusskytte.github.io/diseasy/PULL_REQUEST_TEMPLATE.html","id":"intent","dir":"","previous_headings":"","what":"Intent","title":"NA","text":"Describe briefly problem pull request resolves, new features introduces. Please link issues possible (see also “Linking pull request issue”). Trivial changes, like fixing typo, need issue.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/PULL_REQUEST_TEMPLATE.html","id":"approach","dir":"","previous_headings":"","what":"Approach","title":"NA","text":"issue resolved? Describe approach taken; describe non-obvious considerations made choosing approach. change covered test, please explain .","code":""},{"path":"https://rasmusskytte.github.io/diseasy/PULL_REQUEST_TEMPLATE.html","id":"known-issues","dir":"","previous_headings":"","what":"Known issues","title":"NA","text":"known issues introduced pull request, please let us know. Code rarely perfect, pull request still welcome fix bigger new bug.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/PULL_REQUEST_TEMPLATE.html","id":"checklist","dir":"","previous_headings":"","what":"Checklist","title":"NA","text":"PR passes local unit tests documented new features introduced PR adds new feature, please add entry NEWS.md reviewer assigned PR","code":""},{"path":"https://rasmusskytte.github.io/diseasy/articles/diseasy-observables.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"DiseasyObservables","text":"DiseasyObservables module module responsible providing disease data models. module primarily wrapper around diseasystores means available data depend specific diseasystore used.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/articles/diseasy-observables.html","id":"configuring-the-module","dir":"Articles","previous_headings":"","what":"Configuring the module","title":"DiseasyObservables","text":"module needs configuration initialized. can set options. Primarily, need specify diseasystore see data comes underlying diseasystore can query module. check current status module, $describe() method can used:","code":"obs <- DiseasyObservables$new(   conn = DBI::dbConnect(RSQLite::SQLite()) ) # NOTE: Alternatively we could set options(\"diseasy.conn\" = ...)  obs$set_diseasystore(diseasystore = \"Google COVID-19\") obs$available_observables #> [1] \"n_population\" \"n_hospital\"   \"n_deaths\"     \"n_positive\"   \"n_icu\"        #> [6] \"n_ventilator\" obs$available_stratifications #> [1] \"age_group\"       \"country_id\"      \"country\"         \"region_id\"       #> [5] \"region\"          \"subregion_id\"    \"subregion\"       \"min_temperature\" #> [9] \"max_temperature\" obs$describe() #> # DiseasyObservables interface ###################################### #> diseasystore set to: Google COVID-19 #> Study period is not set #> last_queryable_date is not set"},{"path":"https://rasmusskytte.github.io/diseasy/articles/diseasy-observables.html","id":"getting-observations","dir":"Articles","previous_headings":"","what":"Getting observations","title":"DiseasyObservables","text":"can query model give data given observable given time frame: want stratify data, supply stratification argument. argument designed flexible, means need wrapped rlang::quos(). see , . Since stratification flexible, can programmatically stratify:","code":"obs$get_observation(observable = \"n_population\",                     start_date = as.Date(\"2020-03-01\"),                     end_date = as.Date(\"2020-05-01\")) #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> # A tibble: 62 × 2 #>    date n_population #>   <dbl>        <dbl> #> 1 18322    630535711 #> 2 18323    630535711 #> 3 18324    630535711 #> 4 18325    630535711 #> 5 18326    630535711 #> # ℹ 57 more rows  # NOTE: \"target_conn\" is a SQLite data base which has \"numeric\" as the \"date\" type. # NOTE: The population here is not stratified, so covers all countries in the Google data obs$get_observation(observable = \"n_hospital\",                     stratification = rlang::quos(age_group),                     start_date = as.Date(\"2020-03-01\"),                     end_date = as.Date(\"2020-05-01\")) #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> # A tibble: 620 × 3 #>    date age_group n_hospital #>   <dbl> <chr>          <dbl> #> 1 18322 00-09              0 #> 2 18323 00-09              1 #> 3 18324 00-09              0 #> 4 18325 00-09              2 #> 5 18326 00-09              2 #> # ℹ 615 more rows obs$get_observation(observable = \"n_hospital\",                     stratification = rlang::quos(young_age_groups =                                                    age_group %in% c(\"00-09\", \"10-19\")),                     start_date = as.Date(\"2020-03-01\"),                     end_date = as.Date(\"2020-05-01\")) #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> It looks like you tried to incorrectly use a table in a schema as source. #> ℹ If you want to specify a schema use `in_schema()` or `in_catalog()`. #> ℹ If your table actually contains \".\" in the name use `check_from = FALSE` to #>   silence this message. #> # A tibble: 124 × 3 #>    date young_age_groups n_hospital #>   <dbl>            <int>      <dbl> #> 1 18322                0          2 #> 2 18323                0          5 #> 3 18324                0          5 #> 4 18325                0         10 #> 5 18326                0          6 #> # ℹ 119 more rows  # NOTE: \"target_conn\" is a SQLite data base which has \"numeric\" as the \"boolean\" type."},{"path":"https://rasmusskytte.github.io/diseasy/articles/diseasy-season.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"DiseasySeason","text":"DiseasySeason module responsible implementation different models seasonal dependency disease.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/articles/diseasy-season.html","id":"configuring-the-module","dir":"Articles","previous_headings":"","what":"Configuring the module","title":"DiseasySeason","text":"module can initialized without setting parameters. Note models require parameter reference_date set can done initialization module. see season models comes module can query module. default, module initializes constant_season() model. check current status module, including model set, $describe() method can used: season model set, interfacing model happens $model_t() $model_date() methods.   use models season, module provides functions form $use_*_season(). example, configure module use cosine season instead can use $use_cosine_season() re-configured models stored $model_t $model_date change new model:  Note models, constant_season scale parameter. scale parameter sets relative difference minimum maximum season effect model. example, scale = 0.25, effect season never drop 25% maximum.  models may additional parameters control shape. See documentation module learn specific models.","code":"s <- DiseasySeason$new(reference_date = as.Date(\"2020-03-01\")) s$available_season_models #> [1] \"constant_season\" \"cosine_season\"   \"covid_season_v1\" \"covid_season_v2\" s$describe() #> # Season model ############################################### #> Season model: constant_season #> Constant (no) seasonality model. #> Risk of infection constant through year #> Reference date: 2020-03-01 t <- 0:365 plot(t, purrr::map_dbl(t, s$model_t),      type = \"l\", lwd = 2,      xlab = \"Days past reference date\",      ylab = \"Relative effect of season\",      ylim = c(0, 1.25), xaxs = \"i\", yaxs = \"i\") d <- s$reference_date + 0:365 plot(d, purrr::map_dbl(d, s$model_date),      type = \"l\", lwd = 2,      xlab = \"\",      ylab = \"Relative effect of season\",      ylim = c(0, 1.25), xaxs = \"i\", yaxs = \"i\") s$use_cosine_season() d <- s$reference_date + 0:365 plot(d, purrr::map_dbl(d, s$model_date),      type = \"l\", lwd = 2,      xlab = \"\",      ylab = \"Relative effect of season\",      ylim = c(0, 1.25), xaxs = \"i\", yaxs = \"i\") s$set_scale(0.25)  d <- s$reference_date + 0:365 plot(d, purrr::map_dbl(d, s$model_date),      type = \"l\", lwd = 2,      xlab = \"\",      ylab = \"Relative effect of season\",      ylim = c(0, 1.25), xaxs = \"i\", yaxs = \"i\")"},{"path":"https://rasmusskytte.github.io/diseasy/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rasmus Skytte Randløv. Author, maintainer. Marcus Munch Grünewald. Author. Lasse Engbo Christiansen. Author. Kaare Græsbøll. Author.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Randløv R, Grünewald M, Christiansen L, Græsbøll K (2023). diseasy: Disease Ensemble Modelling Made Easy. R package version 0.0.0.9000, https://github.com/ssi-dk/diseasy.","code":"@Manual{,   title = {diseasy: Disease Ensemble Modelling Made Easy},   author = {Rasmus Skytte Randløv and Marcus Munch Grünewald and Lasse Engbo Christiansen and Kaare Græsbøll},   year = {2023},   note = {R package version 0.0.0.9000},   url = {https://github.com/ssi-dk/diseasy}, }"},{"path":"https://rasmusskytte.github.io/diseasy/index.html","id":"diseasy-","dir":"","previous_headings":"","what":"Disease Ensemble Modelling Made Easy","title":"Disease Ensemble Modelling Made Easy","text":"Leveraging combinatorial building ensemble forecasting disease modelling","code":""},{"path":"https://rasmusskytte.github.io/diseasy/index.html","id":"the-power-of-combinations","dir":"","previous_headings":"","what":"The power of combinations","title":"Disease Ensemble Modelling Made Easy","text":"diseasy framework disease modelling built around philosophy combinatorial building. Even small number modules, ensemble consisting vast array disease models can constructed combining individual modules.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/index.html","id":"the-power-of-ensembles","dir":"","previous_headings":"","what":"The power of ensembles","title":"Disease Ensemble Modelling Made Easy","text":"Ensemble models disease spread typically outperforms individual models terms robust accurate forecasts. diseasy, ensemble models leveraged support evidence-based decision-making pandemic preparedness.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Disease Ensemble Modelling Made Easy","text":"can install development version diseasy GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"ssi-dk/diseasy\")  # Use \"ssi-dk/diseasy@*release\" to install the latest release version"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":null,"dir":"Reference","previous_headings":"","what":"Diseasy' basic module — DiseasyBaseModule","title":"Diseasy' basic module — DiseasyBaseModule","text":"DiseasyBaseModule module implements common functionality modules available. notably, base module facilitates: logging: lgr logger configured making module inherits base module. logger stored private$lg. hashing: active binding self$hash hashes values public fields provide way uniquely identify configuration modules. Care must taken ensure information makes modules distinct also stored public fields. , important property stored private field, hash change. Module-specific tests written ensure hash changes expected. caching: methods private$cache(), private$get_hash() private$is_cached(hash) implements simple caching system whereby results method calls can cached improve performance modules. module loading: Modules instances sometimes loaded modules. private$load_module(module) method provides functionality handle loading (including cloning module passing new module already-loaded modules)","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diseasy' basic module — DiseasyBaseModule","text":"new instance DiseasyBaseModule  R6 class.","code":""},{"path":[]},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Diseasy' basic module — DiseasyBaseModule","text":"hash (character) Computes hash value module. Useful logging caching. Read .","code":""},{"path":[]},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Diseasy' basic module — DiseasyBaseModule","text":"DiseasyBaseModule$new() DiseasyBaseModule$set_moduleowner() DiseasyBaseModule$load_module() DiseasyBaseModule$finalize() DiseasyBaseModule$clone()","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Diseasy' basic module — DiseasyBaseModule","text":"Creates new instance DiseasyBaseModule R6 class. module typically constructed directly rather derived classes.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' basic module — DiseasyBaseModule","text":"","code":"DiseasyBaseModule$new(   moduleowner = class(self)[1],   logging = diseasyoption(\"logging\", self) )"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diseasy' basic module — DiseasyBaseModule","text":"moduleowner (character) name moduleowner. Used logging. logging (boolean) logging enabled?","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"method-set-moduleowner-","dir":"Reference","previous_headings":"","what":"Method set_moduleowner()","title":"Diseasy' basic module — DiseasyBaseModule","text":"Changes \"ownership\" module. Used logging.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' basic module — DiseasyBaseModule","text":"","code":"DiseasyBaseModule$set_moduleowner(moduleowner)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diseasy' basic module — DiseasyBaseModule","text":"moduleowner (character) name moduleowner.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Diseasy' basic module — DiseasyBaseModule","text":"NULL","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"method-load-module-","dir":"Reference","previous_headings":"","what":"Method load_module()","title":"Diseasy' basic module — DiseasyBaseModule","text":"Loads copy provided module module.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' basic module — DiseasyBaseModule","text":"","code":"DiseasyBaseModule$load_module(module, clone = TRUE)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diseasy' basic module — DiseasyBaseModule","text":"module (R6::R6Class instance) instance cloned field name class module clone (boolean) Toggle whether module cloned loading. Default TRUE.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Diseasy' basic module — DiseasyBaseModule","text":"methods allows setting internal module instances DiseasyBaseModule instance created.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Diseasy' basic module — DiseasyBaseModule","text":"NULL","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"method-finalize-","dir":"Reference","previous_headings":"","what":"Method finalize()","title":"Diseasy' basic module — DiseasyBaseModule","text":"Handles clean-class","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' basic module — DiseasyBaseModule","text":"","code":"DiseasyBaseModule$finalize()"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Diseasy' basic module — DiseasyBaseModule","text":"objects class cloneable method.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' basic module — DiseasyBaseModule","text":"","code":"DiseasyBaseModule$clone(deep = FALSE)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diseasy' basic module — DiseasyBaseModule","text":"deep Whether make deep clone.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyBaseModule.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diseasy' basic module — DiseasyBaseModule","text":"","code":"# Normally, you would not want to create this module directly, but it is possible.   base_module <- DiseasyBaseModule$new()    rm(base_module)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":null,"dir":"Reference","previous_headings":"","what":"Diseasy' observables handler — DiseasyObservables","title":"Diseasy' observables handler — DiseasyObservables","text":"DiseasyObservables module responsible interfacing available diseasystores provide disease data models. module primarily acts convenience wrapper around diseasystores. observables stratifications therefore depend data made available diseasystores. See vignette(\"diseasy-observables\")","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diseasy' observables handler — DiseasyObservables","text":"new instance DiseasyBaseModule  R6 class.","code":""},{"path":[]},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Diseasy' observables handler — DiseasyObservables","text":"diseasy::DiseasyBaseModule -> DiseasyObservables","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Diseasy' observables handler — DiseasyObservables","text":"diseasystore (character) set diseasystore get DiseasyObservables . Read-. start_date (Date) start date study period. Read-. end_date (Date) end date study period. Read-. last_queryable_date (Date) latest date can queried. Read-. ds (Diseasystore*) currently loaded diseasystore provides features. Read-. available_observables (character) currently available observables loaded diseasystore. Read-. available_stratifications (character) currently available stratifications loaded diseasystore. Read-. slice_ts (Date) timestamp slice database . Read-. conn (DBIConnection) connection database . Read-.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Diseasy' observables handler — DiseasyObservables","text":"diseasy::DiseasyBaseModule$load_module() diseasy::DiseasyBaseModule$set_moduleowner()","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Diseasy' observables handler — DiseasyObservables","text":"DiseasyObservables$new() DiseasyObservables$set_diseasystore() DiseasyObservables$set_last_queryable_date() DiseasyObservables$set_study_period() DiseasyObservables$set_slice_ts() DiseasyObservables$get_observation() DiseasyObservables$describe() DiseasyObservables$finalize() DiseasyObservables$clone()","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Diseasy' observables handler — DiseasyObservables","text":"Creates new instance DiseasyObservables R6 class.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' observables handler — DiseasyObservables","text":"","code":"DiseasyObservables$new(   diseasystore = NULL,   start_date = NULL,   end_date = NULL,   last_queryable_date = NULL,   conn = NULL,   slice_ts = NULL,   ... )"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diseasy' observables handler — DiseasyObservables","text":"diseasystore (character) character string controls feature store get data . start_date (Date) Study period start (default values get_observation). end_date (Date) Study period end (default values get_observation). last_queryable_date (Date) Enforce limit data can pulled (date). conn (DBIConnection) database connection object (inherits DBIConnection) slice_ts (Date character) Date slice database . See SCDB::get_table() ... Parameters sent DiseasyBaseModule R6 constructor.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"Diseasy' observables handler — DiseasyObservables","text":"new instance DiseasyBaseModule R6 class.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"method-set-diseasystore-","dir":"Reference","previous_headings":"","what":"Method set_diseasystore()","title":"Diseasy' observables handler — DiseasyObservables","text":"Set case definition get DiseasyObservables .","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' observables handler — DiseasyObservables","text":"","code":"DiseasyObservables$set_diseasystore(diseasystore, verbose = NULL)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diseasy' observables handler — DiseasyObservables","text":"diseasystore (character) Text label disease get DiseasyObservables . Must match case definition implemented diseasystore package. verbose diseasystore use verbose outputs?","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"method-set-last-queryable-date-","dir":"Reference","previous_headings":"","what":"Method set_last_queryable_date()","title":"Diseasy' observables handler — DiseasyObservables","text":"Enforce limit data can pulled.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' observables handler — DiseasyObservables","text":"","code":"DiseasyObservables$set_last_queryable_date(last_queryable_date)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diseasy' observables handler — DiseasyObservables","text":"last_queryable_date (Date) DiseasyObservables module return data date.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"method-set-study-period-","dir":"Reference","previous_headings":"","what":"Method set_study_period()","title":"Diseasy' observables handler — DiseasyObservables","text":"Set (default) time period get observations .","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' observables handler — DiseasyObservables","text":"","code":"DiseasyObservables$set_study_period(start_date, end_date)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diseasy' observables handler — DiseasyObservables","text":"start_date (Date) Start date get DiseasyObservables (including). end_date (Date) End date get DiseasyObservables (including).","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"method-set-slice-ts-","dir":"Reference","previous_headings":"","what":"Method set_slice_ts()","title":"Diseasy' observables handler — DiseasyObservables","text":"Set slice_ts get data ","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' observables handler — DiseasyObservables","text":"","code":"DiseasyObservables$set_slice_ts(slice_ts)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diseasy' observables handler — DiseasyObservables","text":"slice_ts (Date character) Date slice database ","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"method-get-observation-","dir":"Reference","previous_headings":"","what":"Method get_observation()","title":"Diseasy' observables handler — DiseasyObservables","text":"Retrieve \"observable\" data set corresponding set diseasystore. default, internal values start_date end_date used return data, can overwritten. results cached faster retrieval subsequent calls.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' observables handler — DiseasyObservables","text":"","code":"DiseasyObservables$get_observation(   observable,   stratification = NULL,   start_date = self %.% start_date,   end_date = self %.% end_date )"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diseasy' observables handler — DiseasyObservables","text":"observable (character) requested observable. follow pattern 'n_*'. stratification (list(quosures)) Default NULL. given, expressions stratification evaluated give stratification level. Use rlang::quos(...) specify stratification. start_date (Date) Start date get DiseasyObservables (including). end_date (Date) End date get DiseasyObservables (including).","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"Diseasy' observables handler — DiseasyObservables","text":"observable found, function returns corresponding data stratification level. Otherwise, function fails lists available DiseasyObservables diseasystore.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"method-describe-","dir":"Reference","previous_headings":"","what":"Method describe()","title":"Diseasy' observables handler — DiseasyObservables","text":"Prints human readable report internal state module.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' observables handler — DiseasyObservables","text":"","code":"DiseasyObservables$describe()"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"method-finalize-","dir":"Reference","previous_headings":"","what":"Method finalize()","title":"Diseasy' observables handler — DiseasyObservables","text":"Handles clean-class","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' observables handler — DiseasyObservables","text":"","code":"DiseasyObservables$finalize()"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Diseasy' observables handler — DiseasyObservables","text":"objects class cloneable method.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' observables handler — DiseasyObservables","text":"","code":"DiseasyObservables$clone(deep = FALSE)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diseasy' observables handler — DiseasyObservables","text":"deep Whether make deep clone.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasyObservables.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diseasy' observables handler — DiseasyObservables","text":"","code":"# Create observables module using the Google COVID-19 data   obs <- DiseasyObservables$new(diseasystore = \"Google COVID-19\",                                 conn = DBI::dbConnect(RSQLite::SQLite()))    # See available observables   print(obs$available_observables) #> [1] \"n_population\" \"n_hospital\"   \"n_deaths\"     \"n_positive\"   \"n_icu\"        #> [6] \"n_ventilator\"   print(obs$available_stratifications) #> [1] \"age_group\"       \"country_id\"      \"country\"         \"region_id\"       #> [5] \"region\"          \"subregion_id\"    \"subregion\"       \"min_temperature\" #> [9] \"max_temperature\"    # Get data for one observable   if (FALSE) {   obs$get_observation(\"n_hospital\",                       start_date = as.Date(\"2020-03-01\"),                       end_date = as.Date(\"2020-03-05\"))   }   rm(obs)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":null,"dir":"Reference","previous_headings":"","what":"Diseasy' season handler — DiseasySeason","title":"Diseasy' season handler — DiseasySeason","text":"DiseasySeason module responsible implementing various models seasonal dependency diseases. module implements number season models different functional forms. Models season either extracted module get_* functions module configured use models internally use_* functions whereafter model can accessed $model_t() $model_date(). season model varying number parameters. See documentation details. See vignette(\"diseasy-season\") examples use.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Diseasy' season handler — DiseasySeason","text":"new instance DiseasySeason  R6 class.","code":""},{"path":[]},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"Diseasy' season handler — DiseasySeason","text":"diseasy::DiseasyBaseModule -> DiseasySeason","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"Diseasy' season handler — DiseasySeason","text":"reference_date (Date) reference date season models. Read-. model_t (function) model currently used module (days past reference date). Read-. model_date (function) model currently used module (date interest). Read-. available_season_models (character) list available season models observables (diseasy::DiseasyObservables) local copy DiseasyObservables module. Read-.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"Diseasy' season handler — DiseasySeason","text":"diseasy::DiseasyBaseModule$finalize() diseasy::DiseasyBaseModule$load_module() diseasy::DiseasyBaseModule$set_moduleowner()","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"Diseasy' season handler — DiseasySeason","text":"DiseasySeason$new() DiseasySeason$set_reference_date() DiseasySeason$set_scale() DiseasySeason$get_season_model() DiseasySeason$use_season_model() DiseasySeason$get_constant_season() DiseasySeason$use_constant_season() DiseasySeason$get_cosine_season() DiseasySeason$use_cosine_season() DiseasySeason$get_covid_season_v1() DiseasySeason$use_covid_season_v1() DiseasySeason$get_covid_season_v2() DiseasySeason$use_covid_season_v2() DiseasySeason$describe() DiseasySeason$clone()","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"Diseasy' season handler — DiseasySeason","text":"Creates new instance DiseasySeason R6 class.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' season handler — DiseasySeason","text":"","code":"DiseasySeason$new(reference_date = NULL, observables = NULL, ...)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diseasy' season handler — DiseasySeason","text":"reference_date (Date) Date season modifier computed relatively . observables (R6::R6Class instance) instance DiseasyObservables needed season models. ... parameters sent DiseasyBaseModule R6 constructor.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"method-set-reference-date-","dir":"Reference","previous_headings":"","what":"Method set_reference_date()","title":"Diseasy' season handler — DiseasySeason","text":"Sets reference_date DiseasySeason module.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' season handler — DiseasySeason","text":"","code":"DiseasySeason$set_reference_date(reference_date)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diseasy' season handler — DiseasySeason","text":"reference_date (Date) Date season modifier computed relatively .","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"method-set-scale-","dir":"Reference","previous_headings":"","what":"Method set_scale()","title":"Diseasy' season handler — DiseasySeason","text":"Sets scale active season model.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' season handler — DiseasySeason","text":"","code":"DiseasySeason$set_scale(scale)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diseasy' season handler — DiseasySeason","text":"scale (numeric) scale season effect (relative climate normal).","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"method-get-season-model-","dir":"Reference","previous_headings":"","what":"Method get_season_model()","title":"Diseasy' season handler — DiseasySeason","text":"Retrieves specified season model.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' season handler — DiseasySeason","text":"","code":"DiseasySeason$get_season_model(model_name, dots = NULL)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diseasy' season handler — DiseasySeason","text":"model_name Name season_model use (calls equivalent $get_<model_name>()). dots (list) Named list arguments passed dot-ellipsis season model.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"method-use-season-model-","dir":"Reference","previous_headings":"","what":"Method use_season_model()","title":"Diseasy' season handler — DiseasySeason","text":"Sets DiseasySeason module use specified season model.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' season handler — DiseasySeason","text":"","code":"DiseasySeason$use_season_model(model_name, dots = NULL)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diseasy' season handler — DiseasySeason","text":"model_name Name season_model use (calls equivalent $use_<model_name>()). dots (list) Named list arguments passed dot-ellipsis season model.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"method-get-constant-season-","dir":"Reference","previous_headings":"","what":"Method get_constant_season()","title":"Diseasy' season handler — DiseasySeason","text":"Retrieves season model constant value (1).","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' season handler — DiseasySeason","text":"","code":"DiseasySeason$get_constant_season()"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"method-use-constant-season-","dir":"Reference","previous_headings":"","what":"Method use_constant_season()","title":"Diseasy' season handler — DiseasySeason","text":"Sets season module use constant value (1).","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' season handler — DiseasySeason","text":"","code":"DiseasySeason$use_constant_season()"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"method-get-cosine-season-","dir":"Reference","previous_headings":"","what":"Method get_cosine_season()","title":"Diseasy' season handler — DiseasySeason","text":"Retrieves season model cosine relationship.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' season handler — DiseasySeason","text":"","code":"DiseasySeason$get_cosine_season(peak = 20.09946, scale = 0.5726693)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diseasy' season handler — DiseasySeason","text":"peak (numeric) Sets period maximal activity (days past new-year). default, risk infection antiphase DMI climate normal maximum daily temperature. scale (numeric) Sets scale season model. scale percent wise difference active least active period.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"method-use-cosine-season-","dir":"Reference","previous_headings":"","what":"Method use_cosine_season()","title":"Diseasy' season handler — DiseasySeason","text":"Sets DiseasySeason module use cosine model season.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' season handler — DiseasySeason","text":"","code":"DiseasySeason$use_cosine_season(peak = 20.09946, scale = 0.5726693)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diseasy' season handler — DiseasySeason","text":"peak (numeric) Sets period maximal activity (days past new-year). default, risk infection antiphase DMI climate normal maximum daily temperature. scale (numeric) Sets scale season model. scale percent wise difference active least active period.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"method-get-covid-season-v-","dir":"Reference","previous_headings":"","what":"Method get_covid_season_v1()","title":"Diseasy' season handler — DiseasySeason","text":"Retrieves first version COVID-19 season model.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' season handler — DiseasySeason","text":"","code":"DiseasySeason$get_covid_season_v1(scale = 0.4825524)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diseasy' season handler — DiseasySeason","text":"scale (numeric) Sets scale season model. scale percent wise difference active least active period.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"method-use-covid-season-v-","dir":"Reference","previous_headings":"","what":"Method use_covid_season_v1()","title":"Diseasy' season handler — DiseasySeason","text":"Sets DiseasySeason module use first version covid 19 season model","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' season handler — DiseasySeason","text":"","code":"DiseasySeason$use_covid_season_v1(scale = 0.4825524)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diseasy' season handler — DiseasySeason","text":"scale (numeric) Sets scale season model. scale percent wise difference active least active period.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"method-get-covid-season-v--1","dir":"Reference","previous_headings":"","what":"Method get_covid_season_v2()","title":"Diseasy' season handler — DiseasySeason","text":"Retrieves second version COVID-19 season model.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' season handler — DiseasySeason","text":"","code":"DiseasySeason$get_covid_season_v2(scale = 0.5042782)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diseasy' season handler — DiseasySeason","text":"scale (numeric) Sets scale season model. scale percent wise difference active least active period.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"method-use-covid-season-v--1","dir":"Reference","previous_headings":"","what":"Method use_covid_season_v2()","title":"Diseasy' season handler — DiseasySeason","text":"Sets DiseasySeason module use second version COVID-19 season model","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' season handler — DiseasySeason","text":"","code":"DiseasySeason$use_covid_season_v2(scale = 0.5042782)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diseasy' season handler — DiseasySeason","text":"scale (numeric) Sets scale season model. scale percent wise difference active least active period.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"method-describe-","dir":"Reference","previous_headings":"","what":"Method describe()","title":"Diseasy' season handler — DiseasySeason","text":"Prints human readable report internal state module.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"usage-13","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' season handler — DiseasySeason","text":"","code":"DiseasySeason$describe()"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"Diseasy' season handler — DiseasySeason","text":"objects class cloneable method.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"usage-14","dir":"Reference","previous_headings":"","what":"Usage","title":"Diseasy' season handler — DiseasySeason","text":"","code":"DiseasySeason$clone(deep = FALSE)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"Diseasy' season handler — DiseasySeason","text":"deep Whether make deep clone.","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/DiseasySeason.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Diseasy' season handler — DiseasySeason","text":"","code":"# Season module with an constant season   s1 <- DiseasySeason$new()    x <- 0:365   plot(x, purrr::map_dbl(x, s1$model_t))     # Season module with an consine season   s2 <- DiseasySeason$new(reference_date = Sys.Date())   s2$use_cosine_season()   plot(x, purrr::map_dbl(x, s2$model_t))     rm(s1, s2)"},{"path":"https://rasmusskytte.github.io/diseasy/reference/diseasy-package.html","id":null,"dir":"Reference","previous_headings":"","what":"diseasy: Disease Ensemble Modelling Made Easy — diseasy-package","title":"diseasy: Disease Ensemble Modelling Made Easy — diseasy-package","text":"package facilitates creation ensemble models modular construction combinatorics.","code":""},{"path":[]},{"path":"https://rasmusskytte.github.io/diseasy/reference/diseasy-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"diseasy: Disease Ensemble Modelling Made Easy — diseasy-package","text":"Maintainer: Rasmus Skytte Randløv rske@ssi.dk (ORCID) Authors: Marcus Munch Grünewald mmgr@ssi.dk (ORCID) Lasse Engbo Christiansen lsec@ssi.dk (ORCID) Kaare Græsbøll kagr@ssi.dk (ORCID)","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/diseasy_linters.html","id":null,"dir":"Reference","previous_headings":"","what":"The custom linters of diseasy — diseasy_linters","title":"The custom linters of diseasy — diseasy_linters","text":"custom linters diseasy","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/diseasy_linters.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The custom linters of diseasy — diseasy_linters","text":"","code":"non_ascii_linter()  diseasy_code_linters()"},{"path":"https://rasmusskytte.github.io/diseasy/reference/diseasy_linters.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The custom linters of diseasy — diseasy_linters","text":"list linters","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/diseasy_linters.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The custom linters of diseasy — diseasy_linters","text":"","code":"diseasy_code_linters() #> [[1]] #> function (source_expression)  #> { #>     if (!lintr::is_lint_level(source_expression, \"file\")) { #>         return(list()) #>     } #>     detection_info <- stringr::str_locate_all(source_expression$file_lines,  #>         stringr::regex(\"[^\\\\x00-\\\\x7f]\", ignore_case = TRUE)) #>     detection_info <- purrr::map2(detection_info, seq_along(detection_info),  #>         ~dplyr::mutate(as.data.frame(.x), line_number = .y)) #>     detection_info <- dplyr::filter(purrr::reduce(detection_info,  #>         rbind), !is.na(.data$start)) #>     purrr::pmap(detection_info, function(start, end, line_number) { #>         lintr::Lint(filename = source_expression$filename, line_number = line_number,  #>             column_number = start, type = \"style\", message = paste(general_msg,  #>                 \"non-ASCII character found\"), line = source_expression$file_lines[line_number],  #>             ranges = list(c(start, end))) #>     }) #> } #> <bytecode: 0x56246fef4ff8> #> <environment: 0x56246fef08b0> #> attr(,\"class\") #> [1] \"linter\"   \"function\" #> attr(,\"name\") #> [1] \"non_ascii_linter\" #>  #> [[2]] #> function (source_expression)  #> { #>     if (!lintr::is_lint_level(source_expression, \"file\")) { #>         return(list()) #>     } #>     todo_info <- stringr::str_locate_all(source_expression$file_lines,  #>         stringr::regex(\"(?<=\\\\s|^)todos?:?(?=\\\\s|$)\", ignore_case = TRUE)) #>     todo_info <- dplyr::filter(purrr::reduce(purrr::map2(todo_info,  #>         seq_along(todo_info), ~dplyr::mutate(as.data.frame(.x),  #>             line_number = .y)), rbind), !is.na(start)) #>     purrr::pmap(todo_info, function(start, end, line_number) { #>         lintr::Lint(filename = source_expression$filename, line_number = line_number,  #>             column_number = start, type = \"style\", message = paste(general_msg,  #>                 \"`TODO` statement found\"), line = source_expression$file_lines[line_number],  #>             ranges = list(c(start, end))) #>     }) #> } #> <bytecode: 0x5624719643c0> #> <environment: 0x562471968548> #> attr(,\"class\") #> [1] \"linter\"   \"function\" #> attr(,\"name\") #> [1] \"todo_linter\" #>"},{"path":"https://rasmusskytte.github.io/diseasy/reference/diseasyoption.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to get option — diseasyoption","title":"Helper function to get option — diseasyoption","text":"Helper function get option","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/diseasyoption.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to get option — diseasyoption","text":"","code":"diseasyoption(option, class = \"DiseasystoreBase\")"},{"path":"https://rasmusskytte.github.io/diseasy/reference/diseasyoption.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to get option — diseasyoption","text":"option (character) Name option get class (character R6::R6class Diseasy* instance) Either classname object option applies .","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/diseasyoption.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Helper function to get option — diseasyoption","text":"specific option within diseasy framework given option class","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/diseasyoption.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Helper function to get option — diseasyoption","text":"","code":"# Retrieve default option for source conn   diseasyoption(\"source_conn\") #> NULL    # Retrieve DiseasystoreGoogleCovid19 specific option for source conn   diseasyoption(\"source_conn\", \"DiseasystoreGoogleCovid19\") #> [1] \"https://storage.googleapis.com/covid19-open-data/v3/\"    # Try to retrieve specific option for source conn for a non existant / unconfigured diseasystore   diseasyoption(\"source_conn\", \"DiseasystoreNonExistent\") # Returns default source_conn #> NULL"},{"path":"https://rasmusskytte.github.io/diseasy/reference/grapes-.-grapes.html","id":null,"dir":"Reference","previous_headings":"","what":"Existence aware pick operator — %.%","title":"Existence aware pick operator — %.%","text":"Existence aware pick operator","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/grapes-.-grapes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Existence aware pick operator — %.%","text":"","code":"env %.% field"},{"path":"https://rasmusskytte.github.io/diseasy/reference/grapes-.-grapes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Existence aware pick operator — %.%","text":"env (object) object environment attempt pick field (character) name field pick env","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/grapes-.-grapes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Existence aware pick operator — %.%","text":"Error field exist env, otherwise returns field","code":""},{"path":"https://rasmusskytte.github.io/diseasy/reference/grapes-.-grapes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Existence aware pick operator — %.%","text":"","code":"t <- list(a = 1, b = 2)   t$a       # 1 #> [1] 1  t %.% a   # 1 #> [1] 1   t$c # NULL #> NULL  if (FALSE) {  t %.% c # ERROR a not found in t  }"},{"path":"https://rasmusskytte.github.io/diseasy/news/index.html","id":"diseasy-0009000","dir":"Changelog","previous_headings":"","what":"diseasy 0.0.0.9000","title":"diseasy 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
